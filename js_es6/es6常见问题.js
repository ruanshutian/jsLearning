/**
 *
 * 一、es6新特性
 * 1、let和const 有块级作用域 ；var有变量提升
 * 2、剪头函数代替function(){}      箭头函数 ()=>{}
 * 3、模版字符串   使用：反引号`${}`
 * 4、解析赋值：按照一定模式匹配，从数组和对象中提取值对变量进行赋值
 * 5、for ... of 循环；遍历数组、set、map、某些类似数组对象、对象、以及字符串
 * 6、import、export导入导出支持模块化
 * 7、set数据结构-类似数组。所有数据都是唯一的，没有重复的值，本身是一个构造函数。
 * 8、...展开运算符，可以将数组或者对象的值展开；还可以将多个值收集为一个变量
 * 9、修饰器@decorator是一个函数，用来修改类甚至于是方法的行为。修饰器本质就是编译时执行的函数
 * 10、class类的继承
 *
 *
 * 二、var、const、let之间的区别：
 *       声明变量           块级       window相映射
 * var   可以重复声明      不受限于块级  会于window相映射（挂属性）
 * let   不可以重复声明     支持块级     不会
 * const 不可以重复声明     支持块级     不会
 *
 * const 声明之后必须赋值，否则报错 ； const定义类就不可以改变，改变类就会报错
 *
 * 三、使用剪头函数 ========================================================
 * 1、使用类剪头函数，this就不死指向window，而是父级（指向是可以改变的）
 * 2、不能使用arguments对象
 * 3、不能用作构造函数，这就是说不能够使用new命令，否则会抛出一个错误
 * 4、不可以使用yield命令，因此剪头函数不能用作Generator函数
 *
 * 四、es6模版字符串有哪些新特性？并且实现一个模版字符串的功能
 * 使用 反引号（``）
 *
 * 五、set、map区别？
 * 应用场景：set用于数据重组；map用于数据存储
 * set：1 成员不能重复 ；2 只有键值没有键名 ，类似数组 ； 3 可以遍历，方法有add delete has
 * mao：1 本质上是键值对的集合，类似集合； 2 可以遍历，可以跟各种数据格式转换
 *
 *
 *
 */



